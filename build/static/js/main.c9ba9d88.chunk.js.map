{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","number","put","Notification","message","className","Error","error","Filter","handleSearch","onChange","Person","person","name","PersonForm","addName","newName","handleNewName","newNumber","handleNewNumber","onSubmit","value","type","Persons","personsToShow","persons","setPersons","setMessage","map","onClick","console","log","window","confirm","nameService","filter","setTimeout","handleDelete","App","useState","setNewName","setNewNumber","search","setSearch","Message","errorMessage","setErrorMessage","useEffect","initialNames","toLowerCase","includes","event","target","preventDefault","isFound","length","exPerson","find","p","updatedPerson","catch","handleUpdate","nameObject","returnedName","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c9ba9d88.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n\n  const update = (id, number) => {\n    const request = axios.put(`${baseUrl}/${id}`, number)\n    return request.then(response => response.data)\n  }\n  \n  export default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport nameService from './services/persons'\nimport './index.css'\n\n\nconst Notification = ({ message }) => {\n  if (message === '') {\n    return null\n  }\n  return (\n    <div className=\"message\">\n      {message}\n    </div>\n  )\n}\n\nconst Error = ({ error }) => {\n  if (error === '') {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {error}\n    </div>\n  )\n}\n\nconst Filter = ({ handleSearch }) => (\n  <div>filter shown with <input onChange={handleSearch} /></div>\n\n)\nconst Person = ({ person }) => (<p>{person.name}{\" \"}\n  {person.number}</p>)\n\n\nconst PersonForm = ({ addName, newName, handleNewName, newNumber, handleNewNumber }) => (\n  <form onSubmit={addName}>\n    <div>\n      name: <input value={newName}\n        onChange={handleNewName} />\n    </div>\n    <div>\n      number: <input value={newNumber}\n        onChange={handleNewNumber} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst handleDelete = (person, persons, setPersons, setMessage) => {\n  console.log(\"klik!\")\n  const id = person.id\n  if (window.confirm(`Delete ${person.name}?`)) {\n    return (\n      nameService\n        .remove(id)\n        .then(\n          setPersons(persons.filter(person => person.id !== id)),\n          setMessage(`${person.name} was deleted successfully`),\n          setTimeout(() => {\n            setMessage('')\n          }, 3000)\n        )\n    )\n  }\n}\n\nconst Persons = ({ personsToShow, persons, setPersons, setMessage }) => (\n  <ul>\n    {personsToShow.map(person =>\n      <li key={person.name}>\n        <Person person={person} /><button onClick={() => handleDelete(person, persons, setPersons, setMessage)}>delete</button>\n      </li>\n    )}\n  </ul>\n)\n\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [Message, setMessage] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n\n  useEffect(() => {\n    nameService\n      .getAll()\n      .then(initialNames => {\n        setPersons(initialNames)\n      })\n  }, [])\n\n  const personsToShow = !search\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()) === true)\n\n  const handleUpdate = (isFound, newNumber) => {\n    const id = isFound[0].id\n    const exPerson = persons.find(p => p.id == id)\n    nameService\n      .update(exPerson.id, { ...exPerson, number: newNumber })\n      .then(updatedPerson => {\n        setPersons(persons.map(person => person.id !== id ? person : updatedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`${updatedPerson.name} was updated successfully`)\n        setTimeout(() => {\n          setMessage('')\n        }, 3000)\n      })\n      .catch(error => {\n        setErrorMessage(`${isFound[0].name} has already been removed from server`)\n        setTimeout(() => {\n          setErrorMessage('')\n        }, 3000)\n\n      })\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const isFound = persons.filter(person => person['name'] === newName)\n    if (isFound.length > 0) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        console.log(\"päivitetään!\")\n        handleUpdate(isFound, newNumber)\n\n      }\n\n    }\n    else {\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      }\n      nameService\n        .create(nameObject)\n        .then(returnedName => {\n          setPersons(persons.concat(returnedName))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`${nameObject.name} was added successfully`)\n          setTimeout(() => {\n            setMessage('')\n          }, 2000)\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data)\n          setTimeout(() => {\n            setErrorMessage('')\n          }, 3000)\n        })\n\n    }\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter handleSearch={handleSearch} />\n\n      <h2>Add a new</h2>\n      <PersonForm addName={addName} newName={newName} handleNewName={handleNewName}\n        newNumber={newNumber} handleNewNumber={handleNewNumber} />\n\n      <Notification message={Message} />\n      <Error error={errorMessage} />\n\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} persons={persons} setPersons={setPersons} setMessage={setMessage} setErrorMessage={setErrorMessage} />\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}